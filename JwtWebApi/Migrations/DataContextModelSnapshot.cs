// <auto-generated />
using JwtWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JwtWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JwtWebApi.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Clerk"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Customer"
                        });
                });

            modelBuilder.Entity("JwtWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "edierhernandezmo@gmail.com",
                            LastName = "Hernández",
                            Name = "Edier",
                            Password = "123",
                            Token = "ddf",
                            Username = "ediard-hm"
                        },
                        new
                        {
                            Id = 2,
                            Email = "edierhernandezmo@gmail.com",
                            LastName = "Hernández",
                            Name = "Edier",
                            Password = "123",
                            Token = "ddf",
                            Username = "ediard-hm"
                        },
                        new
                        {
                            Id = 3,
                            Email = "yesenia@gmail.com",
                            LastName = "Florez",
                            Name = "Yesenia",
                            Password = "123",
                            Token = "ddf",
                            Username = "yese"
                        });
                });

            modelBuilder.Entity("JwtWebApi.Models.UserRol", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RolId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RolId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RolId = 3
                        });
                });

            modelBuilder.Entity("JwtWebApi.Models.UserRol", b =>
                {
                    b.HasOne("JwtWebApi.Models.Rol", "Rol")
                        .WithMany("UserRol")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JwtWebApi.Models.User", "User")
                        .WithMany("UserRol")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JwtWebApi.Models.Rol", b =>
                {
                    b.Navigation("UserRol");
                });

            modelBuilder.Entity("JwtWebApi.Models.User", b =>
                {
                    b.Navigation("UserRol");
                });
#pragma warning restore 612, 618
        }
    }
}
